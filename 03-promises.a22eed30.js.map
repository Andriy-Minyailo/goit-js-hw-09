{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SA8CA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KACvBL,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,G,CAlDpBO,SAASC,cAAc,SAE/BC,iBAAiB,UAGtB,SAAyBC,GACvBA,EAAMC,iBACN,MAAQX,MAAAY,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAMK,cAAcC,SACpD,KAAMJ,EAAMK,OAAS,GAAKJ,EAAKI,OAAS,GAAKH,EAAOG,MAAQ,GAE1D,YADArB,EAAAsB,OAAOC,QAAQ,6BAGjB,IAAIC,EAAcC,OAAOT,EAAMK,OAC3BK,EAAW,EACfC,YAAW,KACTzB,EAAcwB,EAAUF,GAAaI,MAAK,EAACzB,SAAEA,EAAQC,MAAEA,MACrDJ,EAAAsB,OAAOO,QAAQ,uBAAqB1B,QAAiBC,OACnD0B,QAAMC,IAAI,uBAAqB5B,QAAiBC,MAAU,IAE3D4B,OAAM,EAAC7B,SAAEA,EAAQC,MAAEA,MAClBJ,EAAAsB,OAAOW,QAAQ,sBAAoB9B,QAAiBC,OAClD0B,QAAMC,IAAI,sBAAoB5B,QAAiBC,MAAU,IAG/D,MAAM8B,EAAYC,aAAY,KACpBT,IAAaD,OAAOP,EAAOG,QAInCG,GAAeC,OAAOR,EAAKI,OAC3BK,GAAY,EACVxB,EAAcwB,EAAUF,GAAaI,MAAK,EAACzB,SAAEA,EAAQC,MAAEA,MACrDJ,EAAAsB,OAAOO,QAAQ,uBAAqB1B,QAAiBC,OACnD0B,QAAMC,IAAI,uBAAqB5B,QAAiBC,MAAU,IAE3D4B,OAAM,EAAC7B,SAAEA,EAAQC,MAAEA,MAClBJ,EAAAsB,OAAOW,QAAQ,sBAAoB9B,QAAiBC,OAClD0B,QAAMC,IAAI,sBAAoB5B,QAAeC,MAAU,KAX3DgC,cAAcF,EAYZ,GACFjB,EAAKI,MAAM,GACdL,EAAMK,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener(\"submit\", oncreatePromise);\n\n\nfunction oncreatePromise(event) {\n  event.preventDefault();\n  const { delay, step, amount } = event.currentTarget.elements;\n  if (!(delay.value >= 0 && step.value >= 0 && amount.value > 0)) {\n    Notify.warning('Please, enter valid data!')\n    return;\n  }\n  let resultDelay = Number(delay.value);\n  let position = 1;\n  setTimeout(() => {\n    createPromise(position, resultDelay).then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    const idInteval = setInterval(() => {\n          if (position === Number(amount.value)) { \n          clearInterval(idInteval);\n          return;\n      }\n      resultDelay += Number(step.value);\n      position += 1;\n        createPromise(position, resultDelay).then(({ position, delay }) => {\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n          console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n          .catch(({ position, delay }) => {\n            Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n            console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n          })\n       }, step.value); \n    }, delay.value)\n}\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve({ position, delay });\n  } else {\n      reject({ position, delay });\n  } \n  })\n};\n\n\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","document","querySelector","addEventListener","event","preventDefault","delay1","step","amount","currentTarget","elements","value","Notify","warning","resultDelay","Number","position1","setTimeout","then","success","console","log","catch","failure","idInteval","setInterval","clearInterval"],"version":3,"file":"03-promises.a22eed30.js.map"}